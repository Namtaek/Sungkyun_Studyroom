knitr::opts_chunk$set(echo = TRUE)
knitr::include_graphics('pic/K-088.png')
knitr::include_graphics('pic/K-089.png')
knitr::include_graphics('pic/K-090.png')
knitr::include_graphics('pic/K-091.png')
knitr::include_graphics('pic/K-092.png')
knitr::include_graphics('pic/dummy2.png')
knitr::include_graphics('pic/dummy2.jpg')
knitr::include_graphics('pic/dummy.jpg')
knitr::include_graphics('pic/dummy.png')
knitr::include_graphics('pic/simpson.jpg')
```{r, echo = FALSE, fig.cap = 'simpson paradox', fig.align='center', out.width='60%'}
knitr::include_graphics('pic/simpson.jpg')
```{r, echo = FALSE, fig.cap = 'simpson paradox2', fig.align='center', out.width='60%'}
knitr::include_graphics('pic/simpson2.png')
knitr::include_graphics('pic/residual.png')
knitr::include_graphics('pic/K-095.png')
knitr::include_graphics('pic/K-096.png')
knitr::include_graphics('pic/K-097.png')
library(dplyr)
data(delivery, package="robustbase")
delivery %>% head()
delivery %>% glimpse()  # dplyr package, 자료형 확인하기 좋음
delivery %>% glimpse()  # dplyr package, 자료형 확인하기 좋음
delivery %>% summary
fit1 = lm(delTime ~ distance, data = delivery)
fit1 %>% summary()
fit1 %>% cooks.distance()
par(mfrow = c(2,2))
plot(fit1)
par(mfrow = c(1,1))
plot(delivery$distance, delivery$delTime)
abline(fit1, lwd = 2)
plot(delivery$distance, delivery$delTime)
abline(fit1, lwd = 2)
delivery2 = delivery[-9,]
fit2 = lm(delTime ~ distance, data = delivery2)
fit2 %>% summary()
par(mfrow = c(2,2))
plot(fit2)
par(mfrow = c(1,1))
plot(delivery$distance, delivery$delTime)
abline(fit1, lwd = 2)
abline(fit2, lwd = 2, col = 'red')
fit3 = lm(delTime ~ n.prod + distance, data = delivery)
fit3 %>% summary
cooks.distance(fit3)
par(mfrow = c(2,2))
plot(fit3)
par(mfrow = c(1,1))
par(mfrow = c(2,2))
plot(fit3)
par(mfrow = c(1,1))
fit4 = lm(delTime ~ n.prod + distance, data = delivery2)
fit4 %>% summary
fit5 = lm(delTime ~ n.prod*distance, data = delivery) # 교호작용텀 고려
fit5 %>% summary
par(mfrow = c(2,2))
plot(fit5)
par(mfrow = c(1,1))
knitr::opts_chunk$set(echo = TRUE)
knitr::include_graphics('pic/K-076.png')
knitr::include_graphics('pic/K-077.png')
```{r, echo = FALSE, fig.cap = 'Heteroskedasticity', fig.align='center', out.width='90%'}
knitr::include_graphics('pic/K-078.png')
knitr::include_graphics('pic/K-078.png')
knitr::include_graphics('pic/K-079.png')
knitr::include_graphics('pic/K-080.png')
knitr::include_graphics('pic/K-081.png')
knitr::include_graphics('pic/K-082.png')
knitr::include_graphics('pic/K-083.png')
knitr::include_graphics('pic/K-084.png')
knitr::include_graphics('pic/K-085.png')
knitr::include_graphics('pic/K-086.png')
knitr::include_graphics('pic/K-087.png')
knitr::include_graphics('pic/K-089.png')
knitr::include_graphics('pic/K-090.png')
knitr::include_graphics('pic/K-077.png')
knitr::include_graphics('pic/K-090.png')
knitr::include_graphics('pic/K-091.png')
knitr::include_graphics('pic/K-092.png')
knitr::include_graphics('pic/K-093.png')
knitr::include_graphics('pic/K-094.png')
knitr::include_graphics('pic/K-093.png')
knitr::include_graphics('pic/K-095.png')
knitr::include_graphics('pic/K-096.png')
-	QQ플랏의 아이디어처럼, 정규분포7분위수 값과 표준화 잔차 사이의 선형관계를 확인하는 검정이다.
-	관측치가 5000개 이하일 때만 가능하다.
-	R 기본함수로 내장되어 있으며, residual 값을 넣으면 된다.
knitr::include_graphics('pic/K-097.png')
knitr::include_graphics('pic/K-098.png')
